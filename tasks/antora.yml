---

# Use an interactive shell.
# nvm commands add its bin directory to the $PATH.
# These commands are in a resource file.
# Tell bash to be interactive (-i) and read the .bashrc file
# before running the command (-c).
# We don't need a login shell (-l) which tells bash to read .bash_profile.
#
# Alternatives
# Adding options like this doesn't work.
# Ansible adds single quotes, and there is no file named '/usr/bin/bash -i'.
#   executable: /usr/bin/bash -i
# There may be some luck to be had with "become_flags", 
# but -i, -c and -l mean different things to sudo. 
#
- name: is antora already installed?
  ansible.builtin.shell: 
    cmd: bash -i -c 'antora -v'
  register: r_check_antora
  ignore_errors: yes

- set_fact:
    antora_installed: yes
  when: r_check_antora.rc == 0

- debug:
    var: antora_installed

- name: Create a working directory
  ansible.builtin.file:
    path: ~/docs-site
    state: directory

- name: Create a JSON file
  ansible.builtin.copy:
    content: '{}'
    dest: ~/docs-site/package.json

- name: Install antora
  ansible.builtin.shell:
    # places files in ~/docs-site/node_modules/
    cmd: bash -i -c 'npm i -D -E @antora/cli@3.0.0 @antora/site-generator@3.0.0'
    # places files in ~/.nvm/versions/node/v16.14.2/lib/node_modules/@antora/site-generator/node_modules/
    # global install (-g) needs nvm work to put files somewhere more global, like /usr/local/
    #cmd: bash -i -c 'npm i -g @antora/cli@3.0.0 @antora/site-generator@3.0.0'
  args:
    chdir: "$HOME/docs-site"
    creates: "$HOME/.nvm/versions/node/v16.14.2/lib/node_modules/@antora"
  register: r_npm_antora
  when: not antora_installed
  changed_when: yes

- debug:
    #verbosity: 1
    var: r_npm_antora

